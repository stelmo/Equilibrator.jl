var documenterSearchIndex = {"docs":
[{"location":"#Equilibrator.jl-—-interface-to-Python-eQuilibrator-for-computing-reaction-energies","page":"Documentation","title":"Equilibrator.jl — interface to Python eQuilibrator for computing reaction energies","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"TBD","category":"page"},{"location":"#Function-reference","page":"Documentation","title":"Function reference","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Modules=[Equilibrator]\nPages=[\"tools.jl\"]","category":"page"},{"location":"#Equilibrator.build_rxn_string","page":"Documentation","title":"Equilibrator.build_rxn_string","text":"build_rxn_string(rxn::Reaction, compoundtype=\"kegg\")\n\nGet a reaction in string format for Equilibrator.\n\n\n\n\n\n","category":"function"},{"location":"#Equilibrator.map_gibbs_external-Tuple{Dict{String,Float64},Any}","page":"Documentation","title":"Equilibrator.map_gibbs_external","text":"map_gibbs_external(fluxres::Dict{String, Float64}, gibbs)\n\nCalculate the Gibbs free energy change taking only the external fluxes into account. NB: you need to account for the biomass function separately.\n\n\n\n\n\n","category":"method"},{"location":"#Equilibrator.map_gibbs_internal","page":"Documentation","title":"Equilibrator.map_gibbs_internal","text":"map_gibbs_internal(fluxres, gibbs, biomassid=\"BIOMASS\")\n\nCalculate the Gibbs free energy change taking only the internal fluxes into account. NB: you need to account for the biomass function separately.  NB: the missing fluxes will pick up transporters...\n\n\n\n\n\n","category":"function"},{"location":"#Equilibrator.map_gibbs_rxns-Tuple{Array{Equilibrator.Reaction,1}}","page":"Documentation","title":"Equilibrator.map_gibbs_rxns","text":"map_gibbs_rxns(rxns::Array{Reaction, 1}; dgtype=\"zero\", ph=7.0, ionic_str=\"100 mM\", usekegg=true)\n\nReturn a dict of rxn.id => ΔG of the specified dgtype. Takes as inputs an array of reactions, rxns, and optional keyword arguments dgtype, which specifies which type of ΔG calculation should be returned. Valid options for dgtype are \"phys\" and \"prime\" (anything else is \"zero\").  Ionic strength can be set through ionic_str which takes a string input, e.g. \"150 mM\". Only BIGG and KEGG metabolite identifiers are supported, i.e. the reaction needs to have a KEGG or BIGG id listed in the annotation field in the reaction struct. By default KEGG annotations are used to build the reaction strings that are fed to Equilibrator. Note that the first metabolite id is used.\n\n\n\n\n\n","category":"method"}]
}
